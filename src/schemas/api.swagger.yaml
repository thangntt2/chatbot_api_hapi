swagger: '2.0'
info:
  version: "0.1.0"
  title: Vizbot API
basePath: /api/v1

host: localhost:8080

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  auth:
    type: 'apiKey'
    in: 'header'
    name: 'authorization'

security:
  - auth: []

paths:
  /entity:
    get:
      operationId: getAllEntity
      description: |
        Get all `Entity` that available in your app
      responses:
        200:
          description: A list of your availble `Keyword`
          schema:
            type: array
            items:
              $ref: './models/entity.yaml#/get'
    post:
      operationId: createEntity
      description: |
        Add new `Entity` to your app
      parameters:
        - name: entity
          in: body
          required: true
          schema:
            $ref: ./models/entity.yaml#/create
      responses:
        201:
          description: Successful created
          schema:
            $ref: './models/entity.yaml#/get'
  
  /expression:
    post:
      operationId: createRichExpression
      description: |
        Add new `Expression` for `Entity`
      parameters:
        -
          name: expression
          in: body
          description: A rich information Sentence
          schema:
            $ref: ./models/expression.yaml#/create
          required: true
          
      responses:
        201:
          description: Successful created new `Expression`
          schema:
            $ref: './models/expression.yaml#/get'
    get:
      operationId: getAllExpression
      description: |
        Get all `Expression`s with `Bind` Entity
      responses:
        200:
          description: List of available `Expression` in your intent
          schema:
            type: array
            items:
              $ref: './models/expression.yaml#/get'
  /expression/{expressionId}:
    get:
      description: |
        Get all information about `Expression` with expressionId
      parameters:
        -
          name: expressionId
          in: path
          description:
            Id of `Expression`
          type: string
          required: true
      responses:
        200:
          description: All `Expression` info, with all inline entities in it
          schema:
            $ref: './models/expression.yaml#/get'
